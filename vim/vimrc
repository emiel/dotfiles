set nocompatible

""
"" Plugins
""

call plug#begin('~/.vim/plugged')
Plug '/opt/local/share/fzf/vim'
Plug 'NLKNguyen/papercolor-theme'
Plug 'ambv/black'
Plug 'elmcast/elm-vim'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf.vim'
Plug 'mileszs/ack.vim'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'raichoo/purescript-vim'
Plug 'rhysd/committia.vim'
Plug 'scrooloose/nerdtree'
Plug 'tmhedberg/matchit'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'
call plug#end()

filetype plugin indent on

""
"" Global Options
""

set autoindent
set backspace=indent,eol,start
set clipboard=unnamed
set confirm
set copyindent
set cursorline
set encoding=utf-8
set hidden
set history=256
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set list "show whitepspace
set listchars=tab:>·,trail:·,nbsp:~
set modelines=0
set mouse=a
set nobackup
set nojoinspaces
set pastetoggle=<F10>
set preserveindent
set ruler
set scrolloff=3
set shell=zsh
set shortmess=atI
set showbreak=+++
set showcmd
set showmatch
set showmode
set smartcase
set smartindent
set spelllang=en_us
set tags=tags;~
set textwidth=79
set title
set ttyfast
set visualbell
set wildmenu
set wildmode=list:longest

" Prefer ag (The Silver Searcher) over grep
if executable("ag")
  set grepprg=ag\ --vimgrep\ $*
  set grepformat=%f:%l:%c:%m
endif

""
"" Mapping
""

let mapleader = ','
nnoremap , <Nop>

" Swap similar keys
nnoremap ' `
nnoremap ` '

" Scroll the viewport faster
nnoremap <c-e> 4<c-e>
nnoremap <c-y> 4<c-y>
vnoremap <c-e> 4<c-e>
vnoremap <c-y> 4<c-y>

" Navigate splits
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

""
"" Mappings used frequently
""

" Clear highlight search
nnoremap <leader>h :nohlsearch<CR>

" Strip trailing whitespace
"nnoremap <silent> <leader>rtw :<C-U>call StripTrailingWhitespace()<CR>

" Ack
cnoreabbrev Ack Ack!
cnoreabbrev AckFile AckFile!
nnoremap <leader>a :Ack!<Space>
nnoremap <leader>af :AckFile!<Space>
" Ack - Search for word under cursor
nnoremap K :Ack! <cword> *<CR>

" ALE
nnoremap <leader>F :ALEFix<CR>
nnoremap <silent> <C-k> <Plug>(ale_previous_wrap)
nnoremap <silent> <C-j> <Plug>(ale_next_wrap)

" fzf.vim
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>f :Files<CR>
nnoremap <leader>t :Tags<CR>

" NERDTree
nnoremap <silent> <leader>d :execute 'NERDTreeToggle ' . getcwd()<CR>
" nnoremap \f :NERDTreeFind<CR>

" Spell checking
nnoremap <silent> <leader>s :set spell!<CR>

" Toggle pasting...
nnoremap <leader>p :set paste!<CR>:set paste?<CR>

""
"" File type triggers
""

" Jump to last position in file after opening. Nice!
autocmd BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\   exe "normal! g`\"" |
\ endif

""
"" Colors
""

syntax on

let g:lightline = { 'colorscheme': 'PaperColor' }

let g:PaperColor_Theme_Options = {
  \   'theme': {
  \     'default': {
  \       'transparent_background': 1
  \     }
  \   }
  \ }

set background=light

colorscheme PaperColor

""
"" Plugins
""

" ack.vim
let g:ack_autoclose = 1
let g:ack_mappings = {
      \  'v':  '<C-W><CR><C-W>L<C-W>p<C-W>J<C-W>p',
      \ 'gv': '<C-W><CR><C-W>L<C-W>p<C-W>J' }

if executable('ag')
  let g:ackprg = 'ag --vimgrep --smart-case -s -H --nocolor --nogroup --column'
endif

" ALE
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

" NERDTree
let g:NERDTreeIgnore = ['^__pycache__$', '\~$']
