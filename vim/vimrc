set nocompatible

" Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'NLKNguyen/papercolor-theme'
Plugin 'altercation/vim-colors-solarized'
Plugin 'bling/vim-airline'
Plugin 'chase/vim-ansible-yaml'
Plugin 'ervandew/supertab'
Plugin 'gmarik/Vundle.vim'
Plugin 'hdima/python-syntax'
Plugin 'kien/ctrlp.vim'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'tmhedberg/matchit'
call vundle#end()
filetype plugin indent on

set autoindent
set backspace=indent,eol,start
set confirm
set copyindent
set cursorline
set encoding=utf-8
set hidden
set history=256
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set modelines=0
set nobackup
set preserveindent
set ruler
set scrolloff=3
set shell=zsh
set shortmess=atI
set showbreak=+++
set showcmd
set showmatch
set showmode
set smartcase
set smartindent
set textwidth=79
set title
set ttyfast
set viminfo='20,<50,s10,h,%
set visualbell
set wildmenu
set wildmode=list:longest

""
"" Color Scheme
""

syntax on

set t_Co=256
" colorscheme solarized
colorscheme PaperColor-Dark

if has('gui_running')
"  set background=light
else
  set background=dark
end

""
"" Mapping
""

let mapleader = ","

" Clear highlight search
nnoremap <leader>n :nohlsearch<CR>

" Swap similar keys
nnoremap ' `
nnoremap ` '

" Swap
"nnoremap ; :
"nnoremap : ;

" Scroll the viewport faster
nnoremap <c-e> 4<c-e>
nnoremap <c-y> 4<c-y>
vnoremap <c-e> 4<c-e>
vnoremap <c-y> 4<c-y>

" Navigate splits
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Show unwanted whitespace
set listchars=tab:>·,trail:·,nbsp:~
set list
"nmap <silent> <leader>W :set nolist<CR>
"nmap <silent> <leader>w :set nolist!<CR>

" Catch trailing whitespace
"match ErrorMsg '\s\+$'
nnoremap ,rtw :%s/\s\+$//e<CR>

" Relative line numbers
nmap <silent> <leader>N :set norelativenumber<CR>
nmap <silent> <leader>n :set relativenumber<CR>

autocmd BufNewFile,BufRead *.md set filetype=markdown

"autocmd FileType c,cpp,python autocmd BufWritePre <buffer> :%s/\s\+$//e

" Jump to last position in file after opening. Nice!
autocmd BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\   exe "normal! g`\"" |
\ endif

" tags
set tags=tags;~

nmap <silent> <leader>s :set spell!<CR>
set spelllang=en_us

" Spell checking on for commit messages
autocmd FileType gitcommit setlocal spell
autocmd Filetype svn setlocal spell

""
"" Bundles
""

" NERD Tree
map <silent> <leader>d :execute 'NERDTreeToggle ' . getcwd()<CR>

" tagbar
let g:tagbar_ctags_bin = "/usr/bin/ctags"
nnoremap <silent> <leader>t :TagbarOpenAutoClose<CR>
nnoremap <silent> <leader>T :TagbarToggle<CR>

"
" Ack (ack-grep)
"
let g:ackprg="ack-grep -H --nocolor --nogroup --column"

"
" Python syntax
"
let python_highlight_all = 1

let g:airline_theme='PaperColor'
