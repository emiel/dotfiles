""
"" Plugins
""

call plug#begin('~/.vim/plugged')
Plug '/opt/local/share/fzf/vim'
Plug 'NLKNguyen/papercolor-theme'
Plug 'ambv/black'
Plug 'elmcast/elm-vim'
Plug 'junegunn/fzf.vim'
Plug 'mileszs/ack.vim'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'posva/vim-vue'
Plug 'purescript-contrib/purescript-vim'
Plug 'rhysd/committia.vim'
Plug 'scrooloose/nerdtree'
Plug 'tmhedberg/matchit'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'
call plug#end()

filetype plugin indent on

""
"" Global Options
""

set autoindent
set autoread
set backspace=indent,eol,start
set clipboard=unnamed
set confirm
set copyindent
set cursorline
set encoding=utf-8
set formatoptions+=j
set hidden
set history=256
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set list
set listchars=tab:>·,trail:·,nbsp:~
set modelines=0
set mouse=a
set nobackup
set nojoinspaces
set pastetoggle=<F10>
set path-=/usr/include
set preserveindent
set ruler
set scrolloff=3
set shell=zsh
set shortmess=at
set showbreak=+++
set showcmd
set showmatch
set smartcase
set smarttab
set spelllang=en_us
set tags=tags;~
set title
set ttyfast
set visualbell
set wildcharm=<C-Z>
set wildignore+=*.o,*.pyc
set wildmenu
set wildmode=list:longest

" Prefer ripgrep over grep
if executable("rg")
    set grepprg=rg\ --vimgrep\ --nogroup\ --nocolor\ $*
    set grepformat=%f:%l:%c:%m
endif

""
"" Mappings
""

let mapleader = ','
nnoremap , <Nop>

" Swap similar keys
nnoremap ' `
nnoremap ` '

" Scroll the viewport faster
nnoremap <C-E> 4<C-E>
nnoremap <C-Y> 4<C-Y>
vnoremap <C-E> 4<C-E>
vnoremap <C-Y> 4<C-Y>

" Stop highlighting in addition to clearing and redrawing the screen.
"nnoremap <C-L> :<C-U>nohlsearch<CR><C-L>

""
"" Completion mappings
""

inoremap <silent> <Leader>f <C-X><C-F>
inoremap <silent> <Leader>i <C-X><C-I>
inoremap <silent> <Leader>l <C-X><C-L>
inoremap <silent> <Leader>n <C-X><C-N>
inoremap <silent> <Leader>o <C-X><C-O>
inoremap <silent> <Leader>t <C-X><C-]>
inoremap <silent> <Leader>u <C-X><C-U>

""
"" Mappings used frequently
""

nnoremap <Leader>stw :<C-U>call StripTrailingWhitespace()<CR>

" Ack
cnoreabbrev Ack Ack!
nnoremap <Leader>g :Ack!<SPACE>
nnoremap K :Ack! <cword> *<CR>

" ALE
nnoremap <Leader>F :ALEFix<CR>

" fzf.vim
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>e :edit **/*<C-Z><S-Tab>
nnoremap <Leader>f :find **/*<C-z><S-Tab>
"nnoremap <Leader>f :Files<CR>
nnoremap <Leader>m :Marks<CR>
nnoremap <Leader>t :Tags<CR>

" NERDTree
nnoremap <silent> <Leader>d :execute 'NERDTreeToggle ' . getcwd()<CR>

" Spell checking
nnoremap <Leader>s :set spell!<CR>

" Toggle pasting...
nnoremap <Leader>p :set paste!<CR>:set paste?<CR>

""
"" File type triggers
""

" Jump to last position in file after opening. Nice!
autocmd BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\   exe "normal! g`\"" |
\ endif

""
"" Colors
""

syntax on

let g:PaperColor_Theme_Options = {
  \   'theme': {
  \     'default': {
  \       'transparent_background': 1
  \     }
  \   }
  \ }

set background=light

colorscheme PaperColor

""
"" Plugins
""

" ack.vim
let g:ack_autoclose = 1
let g:ack_mappings = {
      \  'v':  '<C-W><CR><C-W>L<C-W>p<C-W>J<C-W>p',
      \ 'gv': '<C-W><CR><C-W>L<C-W>p<C-W>J' }

if executable('rg')
  let g:ackprg = 'rg --vimgrep --smart-case -s -H --nocolor --nogroup --column'
endif

" fzf.vim
if (executable('rg'))
    let $FZF_DEFAULT_COMMAND = 'rg --hidden --ignore .git -g ""'
endif

" ALE
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

" NERDTree
let g:NERDTreeIgnore = ['^__pycache__$', '\~$']
