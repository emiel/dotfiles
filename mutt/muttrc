set alias_file=~/.mutt/aliases
source ~/.mutt/aliases
source ~/.mutt/colors

# Boolean Variables:
#       set foo
# or    unset foo
# or    toggle foo
# or    reset foo (reset to compile time default)
# or    set nofoo  or set invfoo (inverts actual value)

unset allow_8bit         # use QP or Base64 if unset.
unset arrow_cursor       # "->" as cursor (faster on slow networks).
  set ascii_chars        # Use ASCII chars for threading arrows.
unset askbcc             # ask to fill out Bcc on mesg-send?
unset askcc              # ask to fill out CC on mesg-send?
  set attach_split       # handle every single attachment instead of concat
  set autoedit           # start editor without asking for to, subject,...
  set auto_tag           # if something is tagged, run commands on tagged msgs.
unset beep               # beep on certain user errors and other errors
unset beep_new           # beep on new mail
unset bounce_delivered   # unset => remove Delivered-To: when bouncing.
  set check_new          # search for new messages in maildir/MH folders.
unset collapse_unread    # don't collapse threads with unread mails
unset confirmappend      # prompt for confirm when appending message to ex. mbox
  set confirmcreate      # prompt for confirm when saving to non existing mbox
  set copy               # always keep a copy of my mails
  set delete_untag       # untag messages when marking them for deletion.
  set edit_headers       # put headers in editor when composing messages
  set encode_from        # use Quoted-Printable, if ^From in a mail.
  set fast_reply         # do not ask for to, subject,... when replying.
  set fcc_attach         # store attachments too when doing a Fcc
  set fcc_clear          # FCCs will be stored unencrypted and unsigned
  set followup_to        # Add Mail-Followup-To header.
unset force_name         # outgoing mail to be saved in folder of "login name"
  set forward_decode     # decode messages when forwarding without MIME
unset forward_decrypt    # decrypt PGP message, when mime_forward and !mime_fw_d
unset forward_quote      # quote forwarded message, if not $mime_forward
  set hdrs               # nohdrs implies not to write my_hdr into mail.
unset header             # quote full header on reply
  set help               # show help in first line of the display
  set hidden_host        # when set, skip the host name part of hostname
  set honor_followup_to  # Mail-Followup-To header is honored?
unset ignore_list_reply_to		# ignore Reply-To pointing back to mailinglist
  set implicit_autoview			# use autoview, if a "copiousoutput" is in mailcap.
  set mailcap_sanitize			# remove ugly chars from mailcap % expands.
unset mark_old					# mark new articles as old, when leaving mbox
  set markers					# put a '+' at the beginning of wrapped lines.
  set menu_scroll				# scroll on last line of menu (set) or do a nextpage?
unset meta_key					# Don't interpret Alt-x as ESC x
unset metoo						# should we keep ourselves in group replies?
  set mh_purge					# remove messages marked as deleted from MH folders.
unset mime_forward_decode		# decode messages when forwarding with MIME
  set pager_stop				# Don't jump to next message at end of message.
unset pgp_replysign				# always sign reply to signed message
unset pgp_show_unusable			# Show non-usable keys on the PGP key selection menu?
  set pipe_decode				# Weed headers and PGP-decode message before piping
  set pipe_split				# split tagged messages (or don't) when using "|"
unset prompt_after				# display prompt after exit from pager
unset read_only					# folders not read only
unset reply_self				# if unset, a reply to yourself implies reply to other
unset resolve					# go to next undeleted message after modifying actual
unset reverse_alias				# use realname from reverse alias lookup
unset reverse_name				# Set "From" to address, where replied mail was sent to
unset save_address				# Use full mail adress (with domain) as default folder.
unset save_empty				# remove mailbox when last message is removed.
unset save_name					# Fcc, if ~/Mail/<to> exists.
unset score						# don't do scoring
  set sig_dashes				# Prepend "-- \n" to the signature
  set smart_wrap				# wrap long lines at word boundary.
unset sort_re					# set: only put a child in a thread, if starts with Re:
  set status_on_top				# status line at the top or button?
unset strict_threads			# thread only by In-Reply-To/References or by Subject.
unset suspend					# Ctrl-Z is able to suspend mutt.
  set thorough_search			# MIME decode before searching.
  set tilde						# Internal Pager: ~~~~ at and of message?
unset uncollapse_jump			# don't move pointer, when uncollapsing thread
unset use_8bitmime				# run sendmail 8.8.x with -B8BITMIME to enable 8bit
  set use_domain				# add $domain to all addresses without @host
unset use_from					# generate a "From:" header (unless my_hdr From:)
  set user_agent				# Create User-Agent: Mutt/<Version> header.
unset wait_key					# Only "press a key" if return value non-zero
  set wrap_search				# Wrap search to top/bottom.
unset write_bcc					# send Bcc: line to $sendmail

# Quadoptions
#       set foo=yes
#  or   set foo=ask-yes
#  or   set foo=no
#  or   set foo=ask-no
#  or   reset foo (reset to compile time default)

set abort_nosubject=yes    # Abort, if message has no subject.
set abort_unmodified=yes   # Abort, if message wasn't edited.
set delete=yes             # ask for confirmation when deleting messages?
set include=yes            # quote message, when replying
set mime_forward=ask-no    # use MIME when forwarding mails.
set move=no                # Move mail-spool to $mbox?
set postpone=ask-no        # ask for postponing when doing an Abort.
set print=ask-yes          # ask whether you really want to print.
set quit=yes               # ask before quitting.
set recall=ask-yes         # ask for using postponed message.

set attribution="* %n (%a) wrote:"
set default_hook="~f %s | ~t %s"
set editor="vim '+/^$'"
set folder=~/Maildir # directory with all mail folders
set ispell="aspell -e -c"
set mbox=~/Maildir/          # Where is my main mailbox (where should read mail go)
set mbox_type="Maildir"
set pager_index_lines=7    # number of lines to see from the index
set postponed=~/Maildir/Postponed/
set quote_regexp="^( {0,4}-?[>|:]| {0,4}[a-z0-9]+[>|]+)+"
set read_inc=20
set realname="Emiel van de Laar"
set record=+'.Sent' # Where to save sent mail?
set reply_regexp="^((re|RE|SV|Re|r e|aw):[ \t]*)*"
set simple_search="~f %s | ~C %s | ~s %s"   # default pattern (Fr|To|Cc|Su)
set sort_alias=alias
set sort_browser=alpha
set spoolfile=~/Maildir/
set tmpdir="~/tmp"

## ======================================================================
## Format Strings:
## ======================================================================

## forward_format - format the text used in the format attribution
set forward_format="(forw) [%a: %s]"
set index_format="%4C %Z %[!%d/%m] %-17.17F (%3l) %s"
set pager_format="%S [%C] %n (%l) %s"
set folder_format="%F %-8.8u %-8.8g %d %8s %N %f"
set status_format="-%r-Mutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b? %?l? %l?]---(%s/%S)-%>-(%P)---"

## ========================================================================
## AUTO_VIEW - tell mutt which "content types" to view with
## the command given in the $HOME/.mailcap file.
## ========================================================================

auto_view text/html text/enriched application/x-gunzip application/postscript /gif application/x-tar-gz application/pgp-signature image/*

## ========================================================================
## BIND - bind commands to keys.
## ========================================================================

## ========================
## Bindings for attach menu
## ========================

bind attach ' ' select-entry

#==============================
# Bindings for index and pager
#==============================

bind index   \t    next-new
bind pager   \t    next-new
bind index   ' '   next-unread
bind pager   ' '   next-unread
bind index   V     show-version
bind pager   V     show-version
bind index   A     create-alias
bind pager   A     create-alias
macro index  S     <pipe-message>add_spammer.pl<enter>s="SPAM\n"
macro pager  S     <pipe-message>add_spammer.pl<enter>s="SPAM\n"
macro index  X     <pipe-message>"add_spammer.pl --domain"<enter>s="SPAM\n"
macro pager  X     <pipe-message>"add_spammer.pl --domain"<enter>s="SPAM\n"

#-==============================================
# Bindings for editing and reloading the muttrc
#===============================================

macro generic   ,vr   "!vim ~/.mutt/muttrc &\r"
macro generic   ,va   "!vim ~/.mutt/aliases &\r"
macro generic   ,sr   "!source ~/.mutt/muttrc &\r"

#=============================================
# These run fetchmail (or wake up the daemon)
#=============================================

macro pager   \cf   "!fetchmail\r"
macro pager   G     "!fetchmail\r"
macro index   \cf   "!fetchmail\r"
macro index   G     "!fetchmail\r"

#====================
# Bindings for index
#====================

bind index   P          recall-message
bind index   s          save-message
bind browser x          check-new
bind index   <pagedown> next-page
bind index   <pageup>   previous-page
bind index   x          sync-mailbox
bind index   a          tag-prefix
bind index   \;         tag-entry

macro index  \cb        "|urlview\n"
macro index  ,l         "l~N ! ~p\n"
macro index  ,n         "l~N\n"

#=======================================
# Quickly change to my favorite folders
#=======================================

macro index  "\\s"  "c=sent\r"
macro index  I      "c!\n" "Go to Inbox"
macro pager  "\\S"  "c=sent\r"
macro pager  I      "c!\n" "Go to Inbox"

#====================
# Bindings for pager
#====================

bind pager     /   search
bind pager     L   list-reply
bind pager     b   bounce-message
bind pager     f   forward-message
bind pager     m   mail
bind pager     g   group-reply
bind pager     j   next-line
bind pager     k   previous-line
bind pager     :   enter-command
bind pager     p   previous-undeleted
bind pager     n   next-undeleted
bind pager     \n  next-unread
bind compose   \n  send-message
bind compose   s   edit-subject
bind pager     ,p  print-message

macro pager J "!gpg --keyserver wwwkeys.eu.pgp.net --recv-key " "Get PGP Key"
macro pager K "!gpg --lsign-key " "Sign PGP Key"

#=================
# Movement system
#=================

bind  pager   <up>     previous-line
bind  pager   <down>   next-line
bind  pager   <left>   exit
bind  pager   <right>  view-attachments
bind  attach  <left>   exit
bind  attach  <right>  view-attach
bind  index   <right>  display-message

#=======================
# Headers to ignore/see
#=======================

ignore *
unignore from: date subject to cc reply-to:
unignore organization organisation
unignore user-agent: x-agent: x-mailer: x-newsreader:
unignore newsgroups: posted-to: x-spam-rule:

# ordering of headers in the pager
unhdr_order *
hdr_order Date: From: To: Cc: X-Newsreader: X-Mailer: Organization: Organisation: User-Agent: Newsgroups: Reply-To: Subject: x-spam-rule:

# this is cool, dual text/html mails have only the text part shown
alternative_order text/plain

# Set the defaults for folders:
folder-hook . set timeout=30
folder-hook . set sort=threads
folder-hook . set sort_aux=date-sent

# When I'm in the main index, check more often :)
folder-hook "!"  set timeout=5

mailboxes ~/Maildir
mailboxes `/home/emiel/bin/mailboxes_maildir.rb`

# decode application/pgp
set pgp_decode_command="/usr/local/bin/gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="/usr/local/bin/gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="/usr/local/bin/gpg --status-fd=2 --passphrase-fd 0 --no-verbose --quiet --batch --output - %f"

# create a pgp/mime signed attachment
# set pgp_sign_command="/usr/bin/gpg-2comp --comment '' --no-verbose --batch  --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_sign_command="/usr/local/bin/gpg --no-verbose --batch --quiet --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"

# create a application/pgp signed (old-style) message
# set pgp_clearsign_command="/usr/bin/gpg-2comp --comment ''  --no-verbose --batch  --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_clearsign_command="/usr/local/bin/gpg --no-verbose --batch --quiet --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
# set pgp_encrypt_only_command="pgpewrap gpg-2comp  -v --batch  --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_only_command="pgpewrap /usr/local/bin/gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
# set pgp_encrypt_sign_command="pgpewrap gpg-2comp  --passphrase-fd 0 -v --batch  --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap /usr/local/bin/gpg --passphrase-fd 0  --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="/usr/local/bin/gpg --no-verbose --import -v %f"

# export a key from the public key ring
set pgp_export_command="/usr/local/bin/gpg --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="/usr/local/bin/gpg --verbose --batch  --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="/usr/local/bin/gpg --no-verbose --batch --quiet   --with-colons --list-keys %r"

# read in the secret key ring
set pgp_list_secring_command="/usr/local/bin/gpg --no-verbose --batch --quiet   --with-colons --list-secret-keys %r"

# fetch keys
# set pgp_getkeys_command="pkspxycwrap %r"

# pattern for good signature - may need to be adapted to locale!

# set pgp_good_sign="^gpg: Good signature from"

# OK, here's a version which uses gnupg's message catalog:
# set pgp_good_sign="`gettext -d gnupg -s 'Good signature from "' | tr -d '"'`"

# This version uses --status-fd messages
set pgp_good_sign="^\\[GNUPG:\\] VALIDSIG"
